//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Buiseness_Logic.LaunchServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LaunchServices.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarCustomer", ReplyAction="http://tempuri.org/IService/AgregarCustomerResponse")]
        bool AgregarCustomer(string Nombre, string Apellido, string Correo, string Contrasegna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarCustomer", ReplyAction="http://tempuri.org/IService/AgregarCustomerResponse")]
        System.Threading.Tasks.Task<bool> AgregarCustomerAsync(string Nombre, string Apellido, string Correo, string Contrasegna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        bool Login(string Correo, string Contrasegna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string Correo, string Contrasegna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClienteActivo", ReplyAction="http://tempuri.org/IService/ClienteActivoResponse")]
        string[] ClienteActivo(string Correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClienteActivo", ReplyAction="http://tempuri.org/IService/ClienteActivoResponse")]
        System.Threading.Tasks.Task<string[]> ClienteActivoAsync(string Correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarCustomer", ReplyAction="http://tempuri.org/IService/ActualizarCustomerResponse")]
        bool ActualizarCustomer(string Nombre, string Apellido, string Correo, string Contrasegna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarCustomer", ReplyAction="http://tempuri.org/IService/ActualizarCustomerResponse")]
        System.Threading.Tasks.Task<bool> ActualizarCustomerAsync(string Nombre, string Apellido, string Correo, string Contrasegna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarMembership", ReplyAction="http://tempuri.org/IService/AgregarMembershipResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        bool AgregarMembership(object Cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarMembership", ReplyAction="http://tempuri.org/IService/AgregarMembershipResponse")]
        System.Threading.Tasks.Task<bool> AgregarMembershipAsync(object Cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarAppPurchased", ReplyAction="http://tempuri.org/IService/AgregarAppPurchasedResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        bool AgregarAppPurchased(string NombreApp, object customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarAppPurchased", ReplyAction="http://tempuri.org/IService/AgregarAppPurchasedResponse")]
        System.Threading.Tasks.Task<bool> AgregarAppPurchasedAsync(string NombreApp, object customer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Buiseness_Logic.LaunchServices.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Buiseness_Logic.LaunchServices.IService>, Buiseness_Logic.LaunchServices.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AgregarCustomer(string Nombre, string Apellido, string Correo, string Contrasegna) {
            return base.Channel.AgregarCustomer(Nombre, Apellido, Correo, Contrasegna);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarCustomerAsync(string Nombre, string Apellido, string Correo, string Contrasegna) {
            return base.Channel.AgregarCustomerAsync(Nombre, Apellido, Correo, Contrasegna);
        }
        
        public bool Login(string Correo, string Contrasegna) {
            return base.Channel.Login(Correo, Contrasegna);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string Correo, string Contrasegna) {
            return base.Channel.LoginAsync(Correo, Contrasegna);
        }
        
        public string[] ClienteActivo(string Correo) {
            return base.Channel.ClienteActivo(Correo);
        }
        
        public System.Threading.Tasks.Task<string[]> ClienteActivoAsync(string Correo) {
            return base.Channel.ClienteActivoAsync(Correo);
        }
        
        public bool ActualizarCustomer(string Nombre, string Apellido, string Correo, string Contrasegna) {
            return base.Channel.ActualizarCustomer(Nombre, Apellido, Correo, Contrasegna);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarCustomerAsync(string Nombre, string Apellido, string Correo, string Contrasegna) {
            return base.Channel.ActualizarCustomerAsync(Nombre, Apellido, Correo, Contrasegna);
        }
        
        public bool AgregarMembership(object Cliente) {
            return base.Channel.AgregarMembership(Cliente);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarMembershipAsync(object Cliente) {
            return base.Channel.AgregarMembershipAsync(Cliente);
        }
        
        public bool AgregarAppPurchased(string NombreApp, object customer) {
            return base.Channel.AgregarAppPurchased(NombreApp, customer);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarAppPurchasedAsync(string NombreApp, object customer) {
            return base.Channel.AgregarAppPurchasedAsync(NombreApp, customer);
        }
    }
}
